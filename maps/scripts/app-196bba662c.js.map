{"version":3,"sources":["scripts/app.js"],"names":["angular","moduleConfig","$locationProvider","html5Mode","moduleRun","$log","CONFIG","$rootScope","$state","warn","$on","e","toState","toParams","fromState","fromParams","name","localStorage","getItem","preventDefault","go","module","config","run","constant","VERSION","BUILD_DATE","BUILD_NUMBER","LoginController","onSignIn","googleUser","profile","getBasicProfile","setItem","getName","vm","this","window","error","controller","HeaderController","user","FooterController","DashboardController","init","Highcharts","setOptions","global","useUTC","$onInit","_","TotalImpactController","$scope","onInit","values","suffix","value","footer","prefix","width","length","updateValues","data","energyProduced","filter","reading","type","energy","set","toFixed","PRICE_KWH","event","val","component","bindings","templateUrl","controllerAs","timeSeriesController","$q","$http","all","getSolarData","getConsumptionData","then","$broadcast","solarData","dateChange","consumptionData","plotChart","method","url","result","sortBy","date","moment","dateTime","valueOf","startDate","endDate","chart","getChartConfig","getCategories","categories","map","tz","getSolarSplineData","splineData","getConsumptionSplineData","parseInt","gridEnergy","getXAxis","get","title","text","tickInterval","labels","format","plotLines","color","dashStyle","hour","minute","zIndex","plotBands","label","align","from","to","diff","backgroundColor","exporting","enabled","credits","series","yAxis","stacking","xAxis","Date","subtract","setHours","dateRange","$","document","undefined","EasyTicker","el","options","start","s","timer","setInterval","winFocus","move","opts","direction","interval","controls","toggle","addClass","html","stopText","stop","clearInterval","removeClass","playText","dir","sel","eq","appType","elem","is","selChild","targ","children","height","outerHeight","animate","top","speed","easing","hide","fadeIn","css","adjHeight","moveDir","fullHeight","tempDisp","each","display","visHeight","anim","wrapHeight","visible","arguments","callee","caller","extend","defaults","mHover","position","overflow","margin","off","on","mousePause","mouseenter","timerTemp","mouseleave","up","down","fn","jQuery","solarController","getData","getSplineData","RecommendationController","$element","setIcon","sample","solarDataArray24","suggestions","solarDataArray120","push","splice","forEach","d","i","icon","add","startOf","ticker","element","querySelector","easyTicker","energyDataService","resolve","service","EnergyForecastCtrl","forecastData","DATE_FORMAT","parseFloat","costSaved","key","solar","consumption","DateRangeSelectorController","dates","buttonGroup","selectedRange","isEndDatePickerOpen","isStartDatePickerOpen","datePickerOptions","showWeeks","maxMode","startingDay","dateModelOptions","timezone","guess","applyDatesThroughButtonGroup","obj","errMessage","applyDates","applyDatesThroughClick","checkDates","invalidDate","openEndDatePicker","stopPropagation","openStartDatePicker","onDateChange","batteryController","generateBatteryUsage","initialValue","Math","random","usedBatteryData","storedBatteryData","storedEnergy","usedEnergy","MAX_STORAGE","EMERGENCY_STORAGE","$urlRouterProvider","$stateProvider","when","otherwise","$injector","state","views","@","header@smartEnergy","footer@smartEnergy","$templateCache","put"],"mappings":"CAAA,SAAWA,GACP,YAiBA,SAFSC,GAAAC,GAGLA,EAAkBC,WAAU,GAGhC,QAASC,GAAUC,EAAMC,EAAQC,EAAYC,GACzCH,EAAKI,KAAKH,GADdC,EAASG,IAAA,oBAAwB,SAAYC,EAAAC,EAAQC,EACjDC,EAAUC,GAEe,UAAZH,EAAAI,OAOFC,aAAaC,QAAQ,gBAAhCP,EAAIQ,iBACJX,EAAKY,GAAM,+FA9BfpB,EACKqB,OAAO,OADZ,YACK,aACG,UACA,YACA,eACA,sBACA,aAEA,oBAIHC,OAFGrB,GAGHsB,IAAInB,IAwBVJ,SAGH,SAAWA,GACT,YAAAA,GAGGqB,OAAO,OADVG,SAAA,UACGC,QAAO,QACPC,WAAS,gCACRC,aAAU,SAIb3B,SACH,SAAWA,GACT,YAAAA,GAGGqB,OAAO,yBAGTrB,SAEH,SAFGA,GAGD,YAMA,SAHG4B,GAAOpB,GAKR,QAAOqB,GAAWC,GAIhB,GAAIC,GAAUD,EAAWE,iBAFhBf,cAAAC,QAAA,cAETV,EAAIY,GAAA,0BAEJH,aAAegB,QAAA,aAAAF,EAAAG,WACb1B,EAAOY,GAAG,0BARd,GAHCe,GAAAC,IAIDC,QAAOR,SAAWA,EADlBM,EAAAG,MAAS,wBAPXtC,EAGGqB,OAAO,qBACPkB,WAAW,kBAAmBX,IAmBhC5B,SAEH,SAAWA,GACT,YADDA,GACCqB,OAAA,0BAMCrB,SAEH,SAAWA,GACT,YAMA,SAHGwC,KACAJ,KAEHK,KAASxB,aAAAC,QAAmB,cAP7BlB,EACCqB,OAAA,sBAIGkB,WAAW,mBAAoBC,IAQjCxC,SAEH,SAAWA,GACT,YADDA,GACCqB,OAAA,0BAMCrB,SAEH,SAAWA,GACT,YAMA,SAHG0C,MAJJ1C,EACCqB,OAAA,sBAIGkB,WAAW,mBAAoBG,IAMjC1C,SAEH,SAAWA,GAFR,YAEFA,GAAUqB,OAAA,yBACP,oCAII,yBAFJ,8BACI,oBACA,sBACA,iCACA,oCAKLrB,SACH,SAHQA,GAIJ,YAEF,SAAQ2C,KAQF,QAASC,KAFNC,WAAUC,YAILC,QAFCC,QAAM,KAPTZ,KAEVa,QAASL,EANZ5C,EAAAqB,OAAU,yBAIRkB,WAHC,sBAAAI,IAkBD3C,SAEF,SAAUA,GAFR,YAEFA,GACGqB,OAAA,mCAIFrB,SAED,SAHQkD,GACP,YAKE,SAAAC,GAAAC,GAUI,QAAOC,KACHlB,EAAAmB,SAKItC,KAAM,mCACNuC,OAAQ,MAHhBC,MAAS,EACFC,OAAS,oBAERzC,KAAA,oCACA0C,OAAO,IACPF,MAAA,EACDC,OAAA,kBAECzC,KAAA,mCACAuC,OAAO,OACPC,MAAA,EACDC,OAAA,kBAECzC,KAAA,kCACAuC,OAAO,UACPC,MAAA,EACDC,OAAA,oBAECzC,KAAA,mCACAuC,OAAO,UACPC,MAAA,EACDC,OAAA,gBAOHtB,EAAGwB,OAHCA,MAAA,IAAQxB,EAAAmB,OAAAM,OAAA,KAQhB,QAJQC,GAAaC,GAKjB,GAAIC,GAAiB,CADzBb,GAAAc,OAASF,EAAA,SAAmBG,GACH,gBAAjBA,EAAAC,OACAH,GAAeE,EAAAE,UAWnBjB,EAAEkB,IAAIjC,EAAGmB,QAAS,EAAG,UAA4B,KAAjBS,GAAwBM,QAAQ,IAChEnB,EAAEkB,IAAIjC,EAAGmB,QAAS,EAAG,UAAWS,EAAiBO,GAAWD,QAAQ,IACpEnB,EAAEkB,IAAIjC,EAAGmB,QAAS,EAAG,UAA4B,QAAjBS,GAA4BM,QAAQ,IACpEnB,EAAEkB,IAAIjC,EAAGmB,QAAS,EAAG,UAA4B,IAAjBS,GAAuBM,QAAQ,IAH/DnB,EAAEkB,IAAIjC,EAAGmB,QAAS,EAAG,UAA4B,EAAjBS,GAAiBM,QAAO,IAvD5D,GAJClC,GAAOC,KACPkC,EAAW,GAEhBnC,GAAAc,QAASI,EAELD,EAAI1C,IAAA,cAAY,SAAA6D,EAAAC,GAKZX,EAAaW,EAAIV,6BAd5B9D,QACGqB,OAAA,+BAIKkB,WAAW,wBAAyBY,IAiE3CD,GAED,WACG,YAEAlD,SAHHqB,OAAY,+BACToD,UAAA,eAKQC,UAHRpD,OAAA,KAEKqD,YAAU,gDACPpC,WAAU,wBAKVqC,aAJY,UAQxB,SAAW5E,GACP,YAEAA,GAAQqB,OAAO,8BAHlBrB,SAKD,SAJIA,GAKA,YAMA,SAAS6E,GAAqBC,EAAIC,EAAOxE,EAAY6C,GAkBjD,QAAOR,KACHkC,EAAGE,KACHC,IAMIC,MACDC,KAAK,WAJZ5E,EAAgB6E,WAAA,eACLtB,KAAA3B,EAAAkD,UACHC,WAAAnD,EAAAmD,aAED/E,EAAK6E,WAAY,mBAChBC,UAAWA,EACPE,gBAASA,IAObC,MAKR,QALQP,KAQJ,MAAOF,IAAQU,OAAQ,MAAOC,IAFpB,6CAGLP,KAAK,SAAUQ,GAJfN,EAAenC,EAAA0C,OAAAD,EAAA7B,MAAA,aAOZ3B,EAAGkD,UAAYnC,EAAEmC,GAJZrB,OAAE,SAAe6B,GACpB,MAAUC,QAAQD,EAAAE,UAAAC,UAAA7D,EAAAmD,WAAAW,WACNH,OAAOD,EAAAE,UAAcC,UAAA7D,EAAAmD,WAAAY,UAEhC1C,UASf,QAAS0B,KAGL,MAAOH,IAAQU,OAAQ,MAAOC,IAFpB,yDAGLP,KAAK,SAAUQ,GAJfJ,EAAqBrC,EAAA0C,OAAAD,EAAA7B,MAAA,aAOlB3B,EAAGoD,gBAAkBrC,EAAEqC,GAJlBvB,OAAE,SAAe6B,GACpB,MAAUC,QAAQD,EAAAE,UAAAC,UAAA7D,EAAAmD,WAAAW,WACpBH,OAAoBD,EAAOE,UAAOC,UAAO7D,EAAAmD,WAAAY,UAEtC1C,UASf,QAASgC,KACL3C,WAAWsD,MALE,YAAAC,KAQjB,QAASC,KAAT,MAJAlE,GAAAmE,WAASpD,EAAYqD,IAAApE,EAAAkD,UAAA,SAAA1E,GACjB,MAAWmF,QAAMnF,EAAAoF,UAAaS,GAAA,SAGzBrE,EAAAmE,WAQT,QAASG,KAAT,MACItE,GAAGuE,WAAaxD,EAAEqD,IAAIpE,EAAGkD,UAAW,SAAU1E,GAJ9C,MAAUA,GAAAwD,SAGLhC,EAAAuE,WAQT,QAASC,KACL,MAAOzD,GAAEqD,IAAIpE,EAAGoD,gBAAiB,SAAU5E,GAJ3C,MAAUiG,UAAAjG,EAAAkG,cASd,QALIC,KAkEA,MA1DoD,UAAhD5D,EAAE6D,IAAI5E,EAAGmD,YAAa,YAAa,UAHlC0B,OACDC,KAAA,QAEEX,WAAOD,IACTnC,KAAS,WACLgD,aAAO,EAMPC,QACIC,OAAQ,iBAHZC,YACAC,MAAA,UACAC,UAAQ,cACJ/D,MAAAsC,SAAQ0B,OAAA1B,SAAA2B,SAAA,GAMR9D,MAAO,EAJX+D,OAAY,IAOZC,YAJIL,MAAO,UACPM,OACAX,KAAQ,mBAMJY,MAAO,UAHXC,KAAAhC,SAAO0B,OAAA1B,SAAA2B,SAAA,GACPM,GAAA,OAUJf,OACIC,KAAM,QAHXX,WAAAD,IACHnC,KAAS,WACLgD,aAAO,GAMPC,QACIC,OAAQ,iBAHZC,YACAC,MAAA,UACAC,UAAQ,cACJ/D,MAAQ,GAARsC,SAAQkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QAMR3B,MAAO,EAJX+D,OAAY,IAOZC,YAJIL,MAAO,UACPM,OACAX,KAAQ,mBAMJY,MAAO,UAHXC,KAAO,GAAPhC,SAAOkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QACPyC,GAAA,OAahB,QAAS3B,KACL,OAJAY,OAMQC,KAAM,qBACNY,MAAO,QAHf1B,OACIjC,KAAO,SACH+D,gBAAM,WAOVC,WAJAC,SAAO,GAOPC,SACID,SAAS,GAEbE,SAHAC,MAAS,EACLC,SAAS,SAMLvH,KAAM,iBAJN8C,KAAA6C,MAGA2B,MAAA,EACAC,SAAM,SACNjB,MAAM,UAMNtG,KAAM,sBAJV8C,KAAA2C,MAEI6B,MAAA,EACApE,KAAA,SACAlD,KAAM,qBACN8C,KAAM2C,MAQd+B,MAAO1B,IACPwB,QACIpB,aALU,GAMVF,OACIC,KAAM,UA/M1B,GACK5B,GACAE,EAFLpD,EAAAC,IAKID,GAAAmE,cACAnE,EAAAmD,YACIW,UAAAH,OAAA,GAAA2C,MAAA3C,SAAA4C,SAAA,EAAA,QAAAtB,OAAA,UAAApB,WAAA,GAAAyC,OAAA,GAAAA,OAAAE,SAAA,EAAA,EAAA,EAAA,IAMAzC,QAASJ,OAAO,GAAI2C,MAAK3C,SAASsB,OAAO,UAAUpB,WAAa,GAAIyC,OAAS,GAAIA,OAAOE,SAAS,EAAG,EAAG,EAAG,IAC1GC,WAJD5H,KAAA,QACA6E,KAAA,IASH1D,EAAGc,QALKL,EAORQ,EAAO1C,IAAI,cAAe,SAAU6D,EAAOC,GACvCrC,EAAGmD,WAAad,EAChB5B,qDA5BT5C,EACFqB,OAAU,0BACPkB,WAAA,uBAAAsC,IAuND7E,SACF,SAASA,GACN,YAEAA,GAAQqB,OAAO,0BAJhBoD,UAAA,cACOE,YAAS,4CACfpC,WAAA,uBAMQqC,aAAc,KAJdF,UACHpD,OAAU,QAQjBtB,SAQD,SAAY6I,EAAGxG,EAAQyG,EAAUC,GAqB9B,QAASC,GALGC,EAAUC,GAwElB,QALQC,KAMJC,EAAEC,MALCC,YAAA,WAMmB,GAAdF,EAAEG,UACFC,EAAMJ,EAAEK,KAAKC,YAHzBN,EAASK,KAAAE,UAOLd,EAAEO,EALEK,KAAIG,SAAEC,QAAeC,SAAA,UAAAC,KAAAX,EAAAK,KAAAG,SAAAI,UAU7B,QALQC,KAMJC,cAAed,EAAEC,OACjBD,EAAEC,MAAQ,EACVR,EAAEO,EAAEK,KAAKG,SAASC,QAAQM,YAAY,UAAUJ,KAAKX,EAAEK,KAAKG,SAASQ,UAIzE,QALMZ,GAAQa,GACV,GAAIC,GAAKC,EAAAC,CAOT,IAAKpB,EAAEqB,KAAKC,GAAG,YAAf,CAHW,MAAfL,GACQC,EAAK,eAMLC,EAAK,KAJLC,EAAQ,aAERF,EAAA,cACAC,EAAA,KACAC,EAAK,YAQT,IALIG,GAAMvB,EAAAwB,KAAAC,SAAAP,GACNQ,EAAKH,EAAAI,aAOT3B,GAAEwB,KAAKX,MAAK,GAAM,GAAMe,SACpBC,IAAOV,EAAKO,EAAS,MAJzB1B,EAAIK,KAAAyB,MAAa9B,EAAAK,KAAK0B,OAAS,WAO3BR,EAASS,OAAOZ,GAAUpB,EAAEwB,MAAOS,SAJrCjC,EAAAwB,KAAKU,IAAK,MAAM,GAEfC,OAUP,QALQC,GAAAnB,GAMJJ,IACkBT,EAAP,MAAPa,EAAmB,KAAiB,QAI5C,QALIoB,KACA,GAAIX,GAAO,EAMPY,EAAWtC,EAAEqB,KAAKa,IAAI,UAE1BlC,GAAEqB,KAAKa,IAAI,UAAW,SAHtBlC,EAAAwB,KAAIC,WAASc,KAAA,WACTb,GAAAjC,EAAWzG,MAAO2I,gBAQtB3B,EAAEqB,KAAKa,KAJLM,QAAKF,EACHZ,OAAUA,IASlB,QALQe,GAAYC,GAMhB,GALIC,GAAW,CAMf3C,GAAEwB,KAAKC,SAAS,OAASzB,EAAEK,KAAKuC,QAAU,KAAKL,KAAK,WAChDI,GAAclD,EAAEzG,MAAM2I,gBAFtB,GAAAe,EACF1C,EAAAqB,KAAKR,MAAS,GAAA,GAAWe,SAAKF,OAAUiB,GAAU3C,EAAAK,KAAUyB,OAO1D9B,EAAEqB,KAAKa,IAAK,SAAUS,GAI9B,QALSR,KACW,QAAZnC,EAAEK,KAAKqB,QAAe,GAAA1B,EAAAK,KAAAuC,SAMtBF,KAAuC,QAAhCG,UAAUC,OAAOC,OAAOnL,KAAiB,EAAI,EACpD6K,EAAWC,OACY,QAAjB1C,EAAEK,KAAKqB,QAJrBW,IArJA,GAAIrC,GAAIhH,IA8JR,OA5JAgH,GAAEK,KAAOZ,EAAEuD,UAAYC,EAAUnD,GAJrCE,EAAAqB,KAAS5B,EAAAI,GAMLG,EAAEwB,KAAO/B,EAAEI,GAAI4B,SAAS,gBAJxBzB,EAAAC,MAAQ,EAMRD,EAAEkD,OAAS,EAJXlD,EAAEG,SAAS,EA0CX,WAEIH,EAAEqB,KALGI,WAAAS,IAAA,SAAA,GAAAT,WAAAS,IAAA,SAAA,GAOLlC,EAAEqB,KAAKa,KAJXiB,SAAe,WAMPzB,OAAQ1B,EAAEK,KAAKqB,OAJjB0B,SAAK,WAQPpD,EAAEwB,KALEU,KACAiB,SAAU,WACVE,OAAW,IAGfnD,YAAW,WACPiC,KAMD,QAxDPpC,IAEAN,GAAExG,EAAAyG,IAAW4D,IAAA,cAAAC,GAAA,aAAA,WAMTvD,EAAEG,SAAW,IAJjBmD,IAAA,aAAAC,GAAA,YAAA,WACAvD,EAAAG,SAAA,IAGiB,GAAbH,EAAEK,KAAAmD,YACHxD,EAAAqB,KAAIoC,WAAa,WACdzD,EAAA0D,UAAW1D,EAAAC,MAMTY,MACD8C,WAAW,WAJU,IAAjB3D,EAAA0D,WACA3D,MASXN,EAAEO,EAAEK,KALIG,SAAMoD,IAAAL,GAAA,QAAc,SAAAhM,GAMxBA,EAAEQ,iBACFqK,EAAQ,QAFZ3C,EAAEO,EAAEK,KAAKG,SAASqD,MAAIN,GAAG,QAAS,SAAWhM,GACzCA,EAAEQ,iBACFqK,EAAQ,UAGZ3C,EAAEO,EAAEK,KAAKG,SAASC,QAAM8C,GAAG,QAAS,SAAWhM,GAC3CA,EAAEQ,iBACM,GAARiI,EAAAC,MAAQF,IAMHc,OAsHL+C,GALI,WAAAxB,EAAA,OAMJyB,KAAM,WAAYzB,EAAQ,SAC1BrC,MAAOA,EACPc,KAAMA,EAJVf,QAAOE,EAAAK,MAnLX,GAAIzI,GAAO,aACPqL,GACI3C,UAAW,KAJrByB,OAAc,QAMJD,MAAO,OAJXvB,SAAO,IACPmB,OAAW,OACPkB,QAAA,EACAY,WAAQ,EACRhD,UACAoD,GAAA,GACAC,KAAQ,GACRpD,OAAS,GACTO,SAAY,OACZJ,SAAU,QAqLlBnB,GAAEqE,GAAGlM,GAAQ,SAAWkI,GACpB,MAAO9G,MAAKuJ,KAAK,WACR9C,EAAE/E,KAAK1B,KAAMpB,IACd6H,EAAE/E,KAAK1B,KAAMpB,EAAM,GAAIgI,GAAY5G,KAAM8G,QAKrDiE,OAAQ9K,OALMyG,UAMlB,SAAW9I,GACP,YAEAA,GAAQqB,OAAO,yBAChBrB,SAJH,SAAWA,GACP,YAWA,SAASoN,GAAgBrI,EAAO3B,GAmB5B,QAASR,KALTyK,IAAWlI,KAAA,WACJK,MAIP,QAAS6H,KASL,MAAOtI,IAAQU,OAAQ,MAAOC,IARpB,wCASLP,KAAK,SAAUQ,GACZxD,EAAG2B,KAAOZ,EAAEyC,EAAO7B,MALtB8B,OAAU,YACL5B,OAAA,SAAA6B,GAOM,MAAOC,QAAOD,EAAKE,UAAUC,UAAY7D,EAAGmD,WAAWW,WALhDH,OAAOD,EAAKE,UAAAC,UAAA7D,EAAAmD,WAAAY,UAExB1C,UAUf,QAASgC,KACL3C,WAAWsD,MAAM,QAASC,KAG9B,QAASC,KAKL,MAJAlE,GAAGmE,WAAapD,EAAEqD,IAAIpE,EAAG2B,KAAM,SAAUnD,GAL7C,MAASmF,QAAYnF,EAAAoF,UAAAS,GAAA,SASVrE,EAAGmE,WAGd,QANQgH,KAWJ,MAJAnL,GAAGuE,WAAaxD,EAAEqD,IAAIpE,EAAG2B,KAAM,SAAUnD,GACrC,MAAOA,GAAEwD,SAGNhC,EAAGuE,WAGd,QANQI,KAmEJ,MAhEU,UAAV5D,EAAA6D,IAAU5E,EAAAmD,YAAA,YAAA,UAQF0B,OALHC,KAAW,QAQRX,WAAYD,IALdnC,KAAO,WACTgD,aAAS,EACLC,QACIC,OAAM,iBAEVC,YACAC,MAAM,UACNC,UAAc,cACd/D,MAAQsC,SAAA0B,OAAA1B,SAAA2B,SAAA,GACJ9D,MAAA,EAOA+D,OAAQ,IAEZC,YALIL,MAAA,UACAM,OACAX,KAAO,mBACPY,MAAQ,UAEZC,KAAAhC,SAAY0B,OAAA1B,SAAA2B,SAAA,GACRM,GAAA,OAWJf,OALIC,KAAI,QAQRX,WAAYD,IALbnC,KAAA,WACHgD,aAAS,GACLC,QACIC,OAAM,iBAEVC,YACAC,MAAM,UACNC,UAAc,cACd/D,MAAQ,GAAAsC,SAAAkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QACJ3B,MAAA,EAOA+D,OAAQ,IAEZC,YALIL,MAAA,UACAM,OACAX,KAAO,mBACPY,MAAQ,UAEZC,KAAY,GAAZhC,SAAYkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QACRyC,GAAA,OAchB,QAAS3B,KACL,OACIY,OALGC,KAAA,oBAOCY,MAAO,QAJnB1B,OACWjC,KAAA,SACH+D,gBAAO,WAQPC,WACIC,SAAS,GAEbC,SALID,SAAA,GAEJE,SACIC,MAAA,EAOAC,SAAU,SALdvH,KAAS,kBACLsG,MAAA,UAOAxD,KAAMwJ,MAJNhF,MAAO,EACPpE,KAAA,SACAlD,KAAM,cACNsG,MAAO,UACPxD,KAAMwJ,MAQV9E,MANI1B,IAOJwB,QALIpB,aAAM,GACNF,OACAC,KAAM,UAtJlB,GAAI9E,GAAKC,IALbD,GAAAmE,cAOInE,EANCmD,YACAW,UAAWH,OAAA,GAAA2C,MAAmB3C,SAAA4C,SAAA,EAAA,QAAAtB,OAAA,UAAApB,WAAA,GAAAyC,OAAA,GAAAA,OAAAE,SAAA,EAAA,EAAA,EAAA,IAO3BzC,QAASJ,OAAO,GAAI2C,MAAK3C,SAASsB,OAAO,UAAUpB,WAAa,GAAIyC,OAAS,GAAIA,OAAOE,SAAS,EAAG,EAAG,EAAG,IALlHC,WACQ5H,KAAK,QACN6E,KAAA,IAUH1D,EAAGc,QANCL,EAQJQ,EAAO1C,IANC,cAAM,SAAA6D,EAAAC,GAOVrC,EAAGmD,WAAad,EAChB5B,mCAzBR5C,EACDqB,OAAA,qBACFkB,WAAmB,kBAAA6K,IA0KjBpN,SACF,SAASA,GACN,YAEAA,GAAQqB,OAAO,qBACVoD,UAAU,SALhBE,YAAA,kCACOpC,WAAS,kBACfqC,aAAA,KAOQF,UALApD,OAAO,QASjBtB,SACD,SAAUA,GACP,YAEAA,GACKqB,OAAO,sCALdrB,SAQD,SANGkD,GAOA,YAAA,SAAAqK,GAAAnK,EAAAoK,GA6BI,QAASC,KACL,MAAOvK,GAAEwK,QANN,6CACH,8CACA,+CAQI,2CACA,oDANR,8CAUA,QAPQ9K,GAAA4B,GAQJ,GAPImJ,KAUJxL,GAAGyL,cAEH,KAAA,GAAIC,GAAoB3K,EAAEsB,EAAIa,WANzBrB,OAAK,SAAK6B,GACX,MAAAC,QAAAD,EAAmBE,UAAAC,UAAAC,GACZH,OAAAD,EAAAE,UAAAC,UAAAE,IAER1C,QAECqK,EAAoBjK,OAAM,GAQ1B+J,EAPQG,KAAUD,EAAME,OAAA,EAZxB,IAsBJ7K,GAAE8K,QAAQL,EAAkB,SAAU7J,GAClCZ,EAPC8K,QAAAlK,EAAA,SAAAmK,EAAAC,GAQOA,EAAI,GAAKA,EAAI,IAAMD,EAAE9J,OAAS,IANnChC,EAAAyL,YAAkBE,MACrBtK,MAAiByK,EAQLE,KAAMV,UAtD1B,GAAItL,GAAKC,KACL6D,EAAYH,SAASsI,IAAI,EAAG,QAAQC,QAAQ,QANpDnI,EAAAJ,SAAAsI,IAAA,EAAA,QAAAC,QAAA,QACKC,EAAOtO,QAAAuO,QAAAf,EAAA,GAAAgB,cAAA,cASRrM,GAAGsL,QAAUA,EALbrK,EAAI1C,IAAK,kBAAA,SAAA6D,EAAAC,GACL5B,EAAA4B,KAUJpB,EAAO1C,IAAI,cAAe,SAAU6D,EAAOC,GANxCyB,EAAUzB,EAAAyB,UAQTC,EAAU1B,EAAI0B,QANlBtD,EAAO4B,KAUP8J,EAAOG,YANP/E,UAAW,KACPC,SAAA,sCAjBR3J,QALFqB,OAAA,kCAOOkB,WAAW,2BAA4BgL,IAgE9CrK,GAED,WACG,YAEAlD,SACKqB,OAAO,kCANdoD,UAAA,kBAQUC,YALRC,YAAA,qDAQQpC,WAAY,2BANpBqC,aAAA,UAWH,SAAU5E,GACP,YAEAA,GACKqB,OAAO,yCACdrB,SALD,SAAUA,EAASkD,GAChB,YAMH,SAAUwL,GAAY3J,EAAAD,GAaf,QARSuI,KASL,MAAOvI,GAAG6J,YAblB,GAAAxM,GAAAC,IAEAD,GAAAkL,QAAAA,2BAPArN,EACKqB,OAAO,qCACduN,QAAA,oBAAAF,IAmBA1O,QARMkD,GAUP,SARUlD,GAST,YAEAA,GACGqB,OAAO,sCACVrB,SAED,SAAUkD,EAAG4C,GAPb,YAcC,SAAS+I,GAAmBzL,GAyB1B,QAASR,KACP,IAAI,GAAIsL,GAAI,EAAGA,EAAI,EAAGA,IARtBhL,EAAGkB,IAAAjC,EAAA2M,aAAoBhJ,IAAWsI,IAAAF,EAAA,EAAA,QAAiBG,QAAU,OAAMjH,OAAA2H,MAWnE7L,GAAEc,OATO7B,EAAAkD,UAAY,SAAUvB,GAU7B,GAAI+B,GAAOC,EAAOhC,EAAKiC,UAAUsI,QAAQ,OAAOjH,OAAO2H,GARzDvL,EAAAwL,WAAA9L,EAAA6D,IAAA5E,EAAA2M,cAAAjJ,EAAA,eAAA,IAAAmJ,WAAAlL,EAAAK,QAUM8K,GAAazL,EAAQc,GAAWD,QAAQ,EAPhDnB,GAAAkB,IAASjC,EAAA2M,cAAOjJ,EAAA,eAAArC,GACdN,EAAIkB,IAAIjC,EAAA2M,cAAcjJ,EAAK,aAAAoJ,KAG3B/L,EAAEc,OAAO7B,EAAGoD,gBAAW,SAAgBzB,GACrC,GAAI+B,GAAOC,EAAOhC,EAAKiC,UAAUsI,QAAQ,OAAOjH,OAAO2H,GACnDvL,EAAQwL,WAAW9L,EAAE6D,IAAI5E,EAAG2M,cAAejJ,EAAM,qBAAsB,GAW3E3C,GAAEkB,IAAIjC,EAAG2M,cAAejJ,EAAM,qBAAsBrC,EAAQwL,WAAWlL,EAAKG,YAG9Ef,EAAE8K,QAAQ7L,EAAG2M,aAAc,SAAUhL,EAAMoL,GACzC,GAAIC,GAAQjM,EAAE6D,IAAI5E,EAAG2M,cAAeI,EAAK,eAAgB,GARzDE,EAAUlM,EAAA6D,IAAA5E,EAAiB2M,cAAUI,EAAM,qBAAA,EAE3ChM,GAAAkB,IAAIjC,EAAA2M,cAAmBI,EAAM,cAAkB,IAAfC,EAAqBC,GAAA/K,QAAsB,GAAA,KAU3EnB,EAAEkB,IAAIjC,EAAG2M,cAAeI,EAAK,SAAkC,KAAvBE,EAAcD,GAAaC,GAAa/K,QAAQ,GAAK,MAR7FnB,EAAEkB,IAAIjC,EAAG2M,cAAeI,EAAA,cAAME,EAAsBD,GAAQ9K,QAAW,MAGzElC,EAAEwB,OACAA,MAAI,OArDX,GAAAxB,GAAUC,KACT6D,EAAAH,IAAAsI,IAAA,EAAA,QAAAC,QAAA,OASMnI,EAAUJ,IAASsI,IAAI,EAAG,QAAQC,QAAQ,OAC1CU,EAAc,YARpBzK,EAAA,GAWEnC,GATC2M,eAUD,KAAI,GAAIZ,GAAI,EAAGA,EAAI,EAAGA,IARxBhL,EAAAkB,IAASjC,EAAA2M,aAAAhJ,IAA2BsI,IAAAF,EAAA,EAAA,QAAAG,QAAA,OAAAjH,OAAA2H,MAGlC3L,GAAI1C,IAAA,kBAA0B,SAAQ6D,EAAQC,GAC9CrC,EAAIkD,UAAAnC,EAAcc,OAAAQ,EAAAa,UAAA,SAAAvB,GACd,MAAAgC,GAAYhC,EAAAiC,UAAAC,UAAAC,GAULH,EAAOhC,EAAKiC,UAAUC,UAAYE,IAN3C/D,EAAEoD,gBAAOrC,EAAcc,OAAAQ,EAASe,gBAAmB,SAAQzB,GAUzD,MAAOgC,GAAOhC,EAAKiC,UAAUC,UAAYC,GAClCH,EAAOhC,EAAKiC,UAAUC,UAAYE,IAP3CtD,2BAjBJ5C,QAPAqB,OAAA,kCACGkB,WAAO,qBAAAsM,IAqEV3L,EAAG4C,QAEJ,WACC,YAEA9F,SACGqB,OAAO,kCACPoD,UAAU,kBACTC,UARDpD,OAAA,KAEJqD,YAAY,sDACXpC,WAAA,qBAUIqC,aAAc,UAkPnB,SAAU5E,GACP,YAEAA,GACKqB,OAAO,yCACdrB,SAED,SAAUA,EAAS8F,GAChB,YAHF,SAAAuJ,GAAA9O,GASE,QAAS8C,KACDlB,EAAAmN,OAWIrJ,UAAW,GAAIwC,MAAK3C,IAAS4C,SAAS,EAAG,QAAQtB,OAAO,SAT7DlB,QAAU,GAAAuC,MAAA3C,IAAAsB,OAAA,UAEVjF,EAAAoN,cACAvO,KAAA,QAAA6E,KAAyB,IACzB7E,KAAA,SAAsB6E,KAAA,MACtB7E,KAAA,UAAoB6E,KAAA,IAEvB1D,EAAAqN,cAAkBrN,EAAAoN,YAAA,GACdpN,EAAGsN,qBAAQ,EAWXtN,EAAGuN,uBAVqB,EAWxBvN,EAAGwN,mBACCC,WAAW,EATZC,QAAA,MACCC,YAAQ,GAYZ3N,EAAG4N,kBACCC,SAAUlK,EAAOU,GAAGyJ,SAI5B,QAVOC,GAAoBC,GAWvBhO,EAAGqN,cAVYW,EAWfhO,EAAGiO,WAVU,GAWbjO,EAAGmN,OACCrJ,UAAW,GAAIwC,MAAK3C,IAAS4C,SAASyH,EAAItK,KAAM,QAAQuB,OAAO,SAThElB,QAAmB,IAAnBiK,EAAAtK,KAAmB,GAAA4C,MAAA3C,IAAAsB,OAAA,SAAA,GAAAqB,MAAA3C,IAAAsI,IAAA+B,EAAAtK,KAAA,QAAAuB,OAAA,UAatBiJ,IAGJ,QAVOC,KACHnO,EAAGqN,iBACHa,IAaJ,QAASA,KARL9P,EAAA6E,WAAA,eAWIa,UAAWH,EAAO3D,EAAGmN,MAAMrJ,WAAWD,WAAa,GAAIyC,OAAO,GAAIA,OAAOE,SAAS,EAAE,EAAE,EAAE,IACxFzC,QAASJ,EAAO3D,EAAGmN,MAAMpJ,SAASF,WAAa,GAAIyC,OAAO,GAAIA,OAAOE,SAAS,EAAE,EAAE,EAAE,IAT5FC,UAASzG,EAAAqN,gBAcT,QAASe,KATTpO,EAAAiO,WAAS,GAWLjO,EAAGqO,aAAc,EARb1K,EAAA3D,EAAAmN,MAAWrJ,WAAgBD,WAAWF,EAAA3D,EAAAmN,MAAiBpJ,SAAOF,YAC9D7D,EAAAiO,WAAgB,+CAChBjO,EAAAqO,aAAc,GAItB,QAASC,GAAalM,GAClBpC,EAAGsN,qBAAatN,EAAAsN,oBAChBlL,EAAGmM,kBAaP,QAVQC,GAAgBpM,GAWpBpC,EAAGuN,uBAVkBvN,EAAAuN,sBAWrBnL,EAAMmM,kBA1EV,GAAIvO,GAAKC,IAPbD,GAAAc,QAAAI,EAUIlB,EAAGoO,WAAaA,EAChBpO,EAAG+N,6BAA+BA,EATtC/N,EAAAmO,uBAAAA,EAWInO,EAVCwO,oBAAOA,EAWRxO,EAVCsO,kBAAWA,2BAXhBzQ,EAUKqB,OAAO,qCARZkB,WAAA,8BAAA8M,IAyFFrP,QAVM8F,QAYP,WACG,YAEA9F,SACKqB,OAVM,qCAWNoD,UAVS,qBAWNC,UACIkM,aAAc,KAElBjM,YAAa,8DATxBpC,WAAY,8BACTqC,aAAA,UAcJ,SAVS5E,GAWL,YAEAA,GAAQqB,OAAO,2BAChBrB,SACH,SAAWA,GACP,YAMA,SAAS6Q,GAAkB9L,EAAOxE,EAAY6C,GAc1C,QAAIR,KACAkO,IAYAtL,IARJ,QAAOsL,KACH,GAAAC,GAAgB,GAAA,GAAAC,KAAAC,QAChBC,MACAC,KAaAjO,EAAE8K,QAAQ3I,EAAW,SAASvB,GAVlC,GACIsN,GACAC,EAFKlN,EAAO6K,WAAAlL,EAAAK,OAeJA,GAAS,GAVZ4M,EAAA,KACDK,EAAoBL,EAAgB,IAAA5M,EAAA,GACxCkN,EAAkB,IAAAlN,EAAA,IAClB4M,EAAoB,MAYRK,EAAeL,EAAwB,GAAT5M,EAAe,GAV/CkN,EAAoB,GAATlN,EAAe,KAG5BkN,EAAA,IAAAN,EAYAK,EAA8B,IAAfL,EAA+B,GAAT5M,GAIrCiN,EAXIE,GAYJD,GAXWD,EAAeE,EAY1BF,EAXIE,GACAF,EAAaG,IAYjBF,GAAeE,EAAoBH,EACnCA,EAXGG,GAcPR,EAAeK,EAEfF,EAAgBpD,KAAKkB,WAAW,EAAa3K,QAAQ,KAVrD8M,EAAIrD,KAAekB,WAAa,EAAA3K,QAAA,OAexC,QAASmB,KACL3C,WAXQsD,MAAA,UAAeC,KAc3B,QAXQC,KAeJ,MAHAlE,GAAGmE,WAAapD,EAAEqD,IAAIlB,EAAW,SAAU1E,GAVvC,MAAAmF,QAAAnF,EAAgBoF,UAAKS,GAAA,SAalBrE,EAAGmE,WAWd,QAXIQ,KAwEA,MArEqB,UAAzB5D,EAAS6D,IAAA5E,EAAAmD,YAAgB,YAAA,UAEjB0B,OAYQC,KAAM,QATXX,WAAGD,IAYFnC,KAAM,WACNgD,aAAc,EAVjBC,QACDC,OAAA,iBAEEC,YACFC,MAAS,UACLC,UAAO,cACH/D,MAAMsC,SAAA0B,OAAA1B,SAAA2B,SAAA,GAYN9D,MAAO,EAVX+D,OAAY,IAEZC,YACAL,MAAQ,UACJM,OAYIX,KAAM,mBAVdY,MAAY,UAERC,KAAAhC,SAAW0B,OAAA1B,SAAA2B,SAAA,GACXM,GAAA,OAgBJf,OAVIC,KAAA,QAaJX,WAXQD,IAYRnC,KAAM,WACNgD,aAXU,GAYVC,QACIC,OAAQ,iBATbC,YACHC,MAAS,UACLC,UAAO,cACH/D,MAAM,GAAAsC,SAAAkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QAYN3B,MAAO,EAVX+D,OAAY,IAEZC,YACAL,MAAQ,UACJM,OAYIX,KAAM,mBAVdY,MAAY,UAERC,KAAW,GAAXhC,SAAWkC,KAAAlC,OAAA5C,EAAA6D,IAAA5E,EAAAmD,WAAA,cAAA,QACXyC,GAAA,OAmBhB,QAAS3B,KACL,OACIY,OACIC,KAXI,gBAYJY,MAAO,QAEX1B,OACIjC,KAAM,SAVP+D,gBAAA,WAaHC,WAVCC,SAAA,GAEDC,SACID,SAAM,GAaVE,SATIC,MAAM,EACNhB,MAAA,UAYAtG,KAAM,oBAVV8C,KAAAqN,IAaI7I,MAAO,EAVXhB,MAAS,UACLtG,KAAA,eAYA8C,KAAMoN,IATV1I,MAAA1B,IAYAwB,QAVIpB,aAAO,GACPF,OACAC,KAAM,UAtLtB,GAAQ9E,GAAAC,IACTD,GAAAmE,cACFnE,EAAUmD,YACPW,UAAAH,OAAA,GAAA2C,MAAA3C,SAAA4C,SAAA,EAAA,QAAAtB,OAAA,UAAApB,WAAA,GAAAyC,OAAA,GAAAA,OAAAE,SAAA,EAAA,EAAA,EAAA,IAWQzC,QAASJ,OAAO,GAAI2C,MAAK3C,SAASsB,OAAO,UAAUpB,WAAa,GAAIyC,OAAS,GAAIA,OAAOE,SAAS,EAAG,EAAG,EAAG,IAC1GC,WAVR5H,KAAA,QACY6E,KAAA,GAGZ,IAIQR,GAJRkM,EAA2B,GACnBD,EAAK,IACNJ,KACAC,IAcHhP,GAAGc,QAXCL,EAaJQ,EAAO1C,IAXC,cAAM,SAAA6D,EAAAC,GAYVa,EAAYb,EAAIV,KAChB3B,EAAGmD,WAAad,EAAIc,WAVpB1C,gDAfR5C,EACKqB,OAAO,uBATfkB,WAAmB,oBAAAsO,IA0MjB7Q,SACF,SAASA,GACN,YAEAA,GAAQqB,OAAO,uBACVoD,UAAU,WACPE,YAAa,sCACbpC,WAAY,oBACZqC,aAAc,KACdF,UACIpD,OAAQ,QAGtBtB,SACF,SAAWA,GAVP,YAwBA,SAASC,GAAauR,EAAoBC,GAEtCD,EAZQE,KAAA,IAAmB,UAc3BF,EAZIG,UAAA,SAAAC,GACAA,EAAA7K,IAAA,UAAA3F,GAAA,WAeJqQ,EAXCI,MAAO,eACHnM,IAAA,OAaGoM,OAXHC,KAaWpN,YAAa,iCAEjBqN,sBAXZrN,YAA6B,uCACfpC,WAAc,mBAaZqC,aAAc,YAV9BqN,sBACWtN,YAAe,uCACbpC,WAAA,mBACEqC,aAAA,eAgBViN,MAAM,yBACHnM,IAAK,aACLf,YAZQ,kDAaRpC,WAZQ,sBAaRqC,aAAc,KACd+J,aAGHkD,MAAM,SACHnM,IAAK,SACLf,YAAa,gCACbpC,WAAY,kBAXfqC,aAAM,KACH+J,aAeHkD,MAZG,mBACAlN,YAAS,kCAgBrB,QAASvE,wDA3DTJ,EACKqB,OAXG,mBACA,qBACA,qBAYA,oBACA,wBACA,2BATXC,OAAUrB,GACPsB,IAAAnB,IAgEDJ,SAEHA,QAAQqB,OAAO,OAAOE,KAAK,iBAAkB,SAAS2Q,GAAiBA,EAAeC,IAAI,gCAAgC,mHAC1HD,EAAeC,IAAI,gCAAgC,6EACnDD,EAZaC,IAAM,sCAAmB,0FAatCD,EAAeC,IAZC,8DAAa,g6DAa7BD,EAAeC,IAAI,sDAAsD,mpEACzED,EAAeC,IAAI,qDAAqD,qZACxED,EAAeC,IAAI,kCAAkC,sFACrDD,EAZaC,IAAA,4CAAY,sIAazBD,EAAeC,IAAI,kDAAkD,ofACrED,EAAeC,IAAI,gDAAgD,ueACnED,EAZGC,IAAA,uCAAA,sFAaHD,EAAeC,IAAI,uCAAuC,yiBAX1DD,EAAeC,IAAA,gCAA8B","file":"../../scripts/app-196bba662c.js","sourcesContent":["(function (angular) {\n    'use strict';\n\n    angular\n        .module('app', [\n            'ngAnimate',\n            'ngMessages',\n            'ngTouch',\n            'ui.router',\n            'ui.bootstrap',\n            'angular-loading-bar',\n            \"ngSanitize\",\n\n            'smartEnergy.app'\n        ])\n        .config(moduleConfig)\n        .run(moduleRun);\n\n    function moduleConfig($locationProvider) {\n        $locationProvider.html5Mode(true);\n    }\n\n    function moduleRun($log, CONFIG, $rootScope, $state) {\n        $log.warn(CONFIG);\n      $rootScope.$on( '$stateChangeStart', function(e, toState  , toParams\n        , fromState, fromParams) {\n\n        var isLogin = toState.name === \"login\";\n        if(isLogin){\n          return; // no need to redirect\n        }\n\n        var name = localStorage.getItem('SMART_USER');\n        if (!name) {\n          e.preventDefault(); // stop current execution\n          $state.go('login');\n        }\n      });\n    }\n\n})(angular);\n\n//Do not modify this file\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('app')\n    .constant('CONFIG', {\n      'VERSION':'1.0.2',\n      'BUILD_DATE':'Sun, 28 Jan 2018 04:38:20 GMT',\n      'BUILD_NUMBER':'N/A'\n    });\n})(angular);\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.login', [\n    ]);\n\n})(angular);\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.login')\n    .controller('LoginController', LoginController);\n\n  function LoginController($state) {\n    var vm = this;\n    window.onSignIn = onSignIn;\n\n    vm.error = '';\n    function onSignIn(googleUser) {\n      var profile = googleUser.getBasicProfile();\n      var userToken = localStorage.getItem('SMART_USER');\n      if (userToken) {\n        $state.go('smartEnergy.dashboard');\n      } else {\n        localStorage.setItem('SMART_USER', profile.getName());\n        $state.go('smartEnergy.dashboard');\n      }\n    }\n  }\n\n})(angular);\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.header', [\n    ]);\n\n})(angular);\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.header')\n    .controller('HeaderController', HeaderController);\n\n  function HeaderController() {\n    var vm = this;\n\n    vm.user = localStorage.getItem('SMART_USER');\n  }\n\n})(angular);\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.footer', [\n    ]);\n\n})(angular);\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.footer')\n    .controller('FooterController', FooterController);\n\n  function FooterController() {\n    var vm = this;\n  }\n\n})(angular);\n\n(function (angular) {\n    'use strict';\n\n    angular.module('smartEnergy.dashboard', [\n        'smartEnergy.app.dateRangeSelector',\n        'smartEnergy.timeseries',\n        'smartEnergy.app.totalImpact',\n        'smartEnergy.solar',\n        'smartEnergy.battery',\n        'smartEnergy.app.energyForecast',\n        'smartEnergy.app.recommendation'\n    ]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n  angular.module('smartEnergy.dashboard')\n  .controller('DashboardController', DashboardController);\n\n    function DashboardController() {\n        var vm = this;\n\n        vm.$onInit = init;\n\n        function init(){\n            Highcharts.setOptions({\n                global: {\n                    useUTC: false\n                }\n            });\n        }\n    }\n})(angular);\n\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.totalImpact', []);\n}(angular));\n\n(function (_) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.totalImpact')\n        .controller('TotalImpactController', TotalImpactController);\n\n    function TotalImpactController($scope) {\n        var vm = this;\n        var PRICE_KWH = 0.13;\n\n        vm.$onInit = onInit;\n\n        $scope.$on('data:change', function (event, val) {\n            updateValues(val.data);\n        });\n\n        function onInit() {\n            vm.values = [{\n                name: '../../../_assets/images/bulb.svg',\n                suffix: 'MWh',\n                value: 0,\n                footer: 'energy produced'\n            }, {\n                name: '../../../_assets/images/money.svg',\n                prefix: '$',\n                value: 0,\n                footer: 'dollars saved'\n            }, {\n                name: '../../../_assets/images/foot.svg',\n                suffix: 'tons',\n                value: 0,\n                footer: 'carbon offset'\n            }, {\n                name: '../../../_assets/images/gas.svg',\n                suffix: 'gallons',\n                value: 0,\n                footer: 'petroleum saved'\n            }, {\n                name: '../../../_assets/images/drop.svg',\n                suffix: 'gallons',\n                value: 0,\n                footer: 'water saved'\n            }];\n\n            vm.width = {\n                width: 100 / vm.values.length + '%'\n            };\n        }\n\n        function updateValues(data) {\n            var energyProduced = 0;\n            var carbonOffset = 0;\n\n            _.filter(data, function(reading) {\n                if(reading.type === 'observation') {\n                    energyProduced += reading.energy;\n                }\n            });\n\n            // https://cleantechnica.com/2014/03/22/solar-power-water-use-infographic/\n            // Oil (Petroleum) produces about 0.6% of electricity in 2016 (https://www.eia.gov/tools/faqs/faq.php?id=427&t=3)\n\n            _.set(vm.values, [0, 'value'], (energyProduced * 0.001).toFixed(2));\n            _.set(vm.values, [1, 'value'], (energyProduced * PRICE_KWH).toFixed(2));\n            _.set(vm.values, [2, 'value'], (energyProduced * 0.0008485).toFixed(2));\n            _.set(vm.values, [3, 'value'], (energyProduced * 0.46).toFixed(2));\n            _.set(vm.values, [4, 'value'], (energyProduced * 5).toFixed(2));\n        }\n    }\n}(_));\n\n(function () {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.totalImpact')\n        .component('totalImpact', {\n            bindings: {\n                config: '<'\n            },\n            templateUrl: 'app/components/total-impact/total-impact.html',\n            controller: 'TotalImpactController',\n            controllerAs: 'vm'\n        });\n}());\n\n(function (angular) {\n    'use strict';\n\n    angular.module('smartEnergy.timeseries', []);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.timeseries')\n        .controller('timeSeriesController', timeSeriesController);\n\n    function timeSeriesController($q, $http, $rootScope, $scope) {\n        var vm = this;\n        var solarData;\n        var consumptionData;\n\n\n        vm.categories = [];\n        vm.dateChange = {\n            startDate: moment(new Date(moment().subtract(1, 'days').format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            endDate: moment(new Date(moment().format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            dateRange: {\n                name: \"daily\",\n                date: 1\n            }\n        };\n\n        vm.$onInit = init;\n\n        $scope.$on('date:change', function (event, val) {\n            vm.dateChange = val;\n            init();\n        });\n\n        function init() {\n            $q.all([\n                getSolarData(),\n                getConsumptionData()\n            ]).then(function () {\n                $rootScope.$broadcast('data:change', {\n                    data: vm.solarData,\n                    dateChange: vm.dateChange\n                });\n                $rootScope.$broadcast('forecast:change', {\n                    solarData: solarData,\n                    consumptionData: consumptionData\n                });\n                plotChart();\n            });\n        }\n\n\n        function getSolarData() {\n            var url = 'app/components/timeseries/mock_data.json';\n\n            return $http({ method: 'GET', url: url })\n                .then(function (result) {\n                    solarData = _.sortBy(result.data, ['dateTime']);\n\n                    vm.solarData = _(solarData)\n                        .filter(function (date) {\n                            return moment(date.dateTime).valueOf() > vm.dateChange.startDate\n                                && moment(date.dateTime).valueOf() < vm.dateChange.endDate;\n                        })\n                        .value();\n                });\n        }\n\n        function getConsumptionData() {\n            var url = 'app/components/energy-consumption-data/energyPH.json';\n\n            return $http({ method: 'GET', url: url })\n                .then(function (result) {\n                    consumptionData = _.sortBy(result.data, ['dateTime']);\n\n                    vm.consumptionData = _(consumptionData)\n                        .filter(function (date) {\n                            return moment(date.dateTime).valueOf() > vm.dateChange.startDate\n                                && moment(date.dateTime).valueOf() < vm.dateChange.endDate;\n                        })\n                        .value();\n                });\n        }\n\n        function plotChart() {\n            Highcharts.chart('container', getChartConfig());\n        }\n\n        function getCategories() {\n            vm.categories = _.map(vm.solarData, function (e) {\n                return moment(e.dateTime).tz('UTC');\n            });\n\n            return vm.categories;\n        }\n\n        function getSolarSplineData() {\n            vm.splineData = _.map(vm.solarData, function (e) {\n                return e.energy;\n            });\n\n            return vm.splineData;\n        }\n\n        function getConsumptionSplineData() {\n            return _.map(vm.consumptionData, function (e) {\n                return parseInt(e.gridEnergy);\n            });\n        }\n\n        function getXAxis() {\n            var output;\n\n            if (_.get(vm.dateChange, ['dateRange', 'name']) === 'daily') {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 2,\n                    labels: {\n                        format: '{value:%H:%M}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().hour() + moment().minute() / 60, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().hour() + moment().minute() / 60,\n                        to: 24\n                    }]\n                }\n            } else {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 20,\n                    labels: {\n                        format: '{value:%b:%e}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24,\n                        to: 1000 // imaginary highest value to end plotband\n                    }]\n                }\n            }\n\n            return output;\n        }\n\n        function getChartConfig() {\n            return {\n                title: {\n                    text: 'Energy Consumption',\n                    align: 'left'\n                },\n                chart: {\n                    type: 'column',\n                    backgroundColor: '#eff2f9'\n                },\n                exporting: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [\n                    {\n                        yAxis: 0,\n                        stacking: 'normal',\n                        name: 'Grid Delivered',\n                        data: getConsumptionSplineData()\n                    },\n                    {\n                        yAxis: 0,\n                        stacking: 'normal',\n                        color: '#7ED41C',\n                        name: 'Renewable Delivered',\n                        data: getSolarSplineData()\n                    }, {\n                        yAxis: 0,\n                        type: 'spline',\n                        name: 'Renewable Produced',\n                        data: getSolarSplineData()\n                    }\n                ],\n                xAxis: getXAxis(),\n                yAxis: [{\n                    tickInterval: 10,\n                    title: {\n                        text: 'KWh'\n                    }\n                }]\n            };\n        }\n    }\n})(angular);\n(function(angular) {\n    'use strict';\n\n    angular.module('smartEnergy.timeseries')\n        .component('timeSeries', {\n            templateUrl: 'app/components/timeseries/timeseries.html',\n            controller: 'timeSeriesController',\n            controllerAs: 'vm',\n            bindings: {\n                config: '<'\n            }\n        });\n}(angular));\n/*\n * jQuery - Easy Ticker plugin - v2.0\n * http://www.aakashweb.com/\n * Copyright 2014, Aakash Chakravarthy\n * Released under the MIT License.\n */\n\n;(function ( $, window, document, undefined ) {\n\n    var name = \"easyTicker\",\n        defaults = {\n            direction: 'up',\n            easing: 'swing',\n            speed: 'slow',\n            interval: 2000,\n            height: 'auto',\n            visible: 0,\n            mousePause: 1,\n            controls: {\n                up: '',\n                down: '',\n                toggle: '',\n                playText: 'Play',\n                stopText: 'Stop'\n            }\n        };\n\n    // Constructor\n    function EasyTicker( el, options ) {\n\n        var s = this;\n\n        s.opts = $.extend( {}, defaults, options );\n        s.elem = $(el);\n        s.targ = $(el).children(':first-child');\n        s.timer = 0;\n        s.mHover = 0;\n        s.winFocus = 1;\n\n        init();\n        start();\n\n        $([window, document]).off('focus.jqet').on('focus.jqet', function(){\n            s.winFocus = 1;\n        }).off('blur.jqet').on('blur.jqet', function(){\n            s.winFocus = 0;\n        });\n\n        if( s.opts.mousePause == 1 ){\n            s.elem.mouseenter(function(){\n                s.timerTemp = s.timer;\n                stop();\n            }).mouseleave(function(){\n                if( s.timerTemp !== 0 )\n                    start();\n            });\n        }\n\n        $(s.opts.controls.up).on('click', function(e){\n            e.preventDefault();\n            moveDir('up');\n        });\n\n        $(s.opts.controls.down).on('click', function(e){\n            e.preventDefault();\n            moveDir('down');\n        });\n\n        $(s.opts.controls.toggle).on('click', function(e){\n            e.preventDefault();\n            if( s.timer == 0 ) start();\n            else stop();\n        });\n\n        function init(){\n\n            s.elem.children().css('margin', 0).children().css('margin', 0);\n\n            s.elem.css({\n                position : 'relative',\n                height: s.opts.height,\n                overflow : 'hidden'\n            });\n\n            s.targ.css({\n                'position' : 'absolute',\n                'margin' : 0\n            });\n\n            setInterval( function(){\n                adjHeight();\n            }, 100);\n\n        } // Init Method\n\n        function start(){\n            s.timer = setInterval(function(){\n                if( s.winFocus == 1 ){\n                    move( s.opts.direction );\n                }\n            }, s.opts.interval);\n\n            $(s.opts.controls.toggle).addClass('et-run').html(s.opts.controls.stopText);\n\n        } // Start method\n\n\n        function stop(){\n            clearInterval( s.timer );\n            s.timer = 0;\n            $(s.opts.controls.toggle).removeClass('et-run').html(s.opts.controls.playText);\n        }// Stop\n\n\n        function move( dir ){\n            var sel, eq, appType;\n\n            if( !s.elem.is(':visible') ) return;\n\n            if( dir == 'up' ){\n                sel = ':first-child';\n                eq = '-=';\n                appType = 'appendTo';\n            }else{\n                sel = ':last-child';\n                eq = '+=';\n                appType = 'prependTo';\n            }\n\n            var selChild = s.targ.children(sel);\n            var height = selChild.outerHeight();\n\n            s.targ.stop(true, true).animate({\n                'top': eq + height + \"px\"\n            }, s.opts.speed, s.opts.easing, function(){\n\n                selChild.hide()[appType]( s.targ ).fadeIn();\n                s.targ.css('top', 0);\n\n                adjHeight();\n\n            });\n        }// Move\n\n        function moveDir( dir ){\n            stop();\n            if( dir == 'up' ) move('up'); else move('down');\n            // start();\n        }\n\n        function fullHeight(){\n            var height = 0;\n            var tempDisp = s.elem.css('display'); // Get the current el display value\n\n            s.elem.css('display', 'block');\n\n            s.targ.children().each(function(){\n                height += $(this).outerHeight();\n            });\n\n            s.elem.css({\n                'display' : tempDisp,\n                'height' : height\n            });\n        }\n\n        function visHeight( anim ){\n            var wrapHeight = 0;\n            s.targ.children(':lt(' + s.opts.visible + ')').each(function(){\n                wrapHeight += $(this).outerHeight();\n            });\n\n            if( anim == 1 ){\n                s.elem.stop(true, true).animate({height: wrapHeight}, s.opts.speed);\n            }else{\n                s.elem.css( 'height', wrapHeight);\n            }\n        }\n\n        function adjHeight(){\n            if( s.opts.height == 'auto' && s.opts.visible != 0 ){\n                anim = arguments.callee.caller.name == 'init' ? 0 : 1;\n                visHeight( anim );\n            }else if( s.opts.height == 'auto' ){\n                fullHeight();\n            }\n        }\n\n        return {\n            up: function(){ moveDir('up'); },\n            down: function(){ moveDir('down'); },\n            start: start,\n            stop: stop,\n            options: s.opts\n        };\n\n    }\n\n    // Attach the object to the DOM\n    $.fn[name] = function ( options ) {\n        return this.each(function () {\n            if (!$.data(this, name)) {\n                $.data(this, name, new EasyTicker( this, options ));\n            }\n        });\n    };\n\n})( jQuery, window, document );\n(function (angular) {\n    'use strict';\n\n    angular.module('smartEnergy.solar', []);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.solar')\n        .controller('solarController', solarController);\n\n    function solarController($http, $scope) {\n        var vm = this;\n        vm.categories = [];\n        vm.dateChange = {\n            startDate: moment(new Date(moment().subtract(1, 'days').format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            endDate: moment(new Date(moment().format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            dateRange: {\n                name: \"daily\",\n                date: 1\n            }\n        };\n\n        vm.$onInit = init;\n\n        $scope.$on('date:change', function (event, val) {\n            vm.dateChange = val;\n            init();\n        });\n\n        function init() {\n            getData().then(function () {\n                plotChart();\n            });\n        }\n\n        function getData() {\n            var url = 'app/components/solar/mock_data.json';\n\n            return $http({ method: 'GET', url: url })\n                .then(function (result) {\n                    vm.data = _(result.data)\n                        .sortBy('dateTime')\n                        .filter(function (date) {\n                            return moment(date.dateTime).valueOf() > vm.dateChange.startDate\n                                && moment(date.dateTime).valueOf() < vm.dateChange.endDate;\n                        })\n                        .value();\n                });\n        }\n\n        function plotChart() {\n            Highcharts.chart('solar', getChartConfig());\n        }\n\n        function getCategories() {\n            vm.categories = _.map(vm.data, function (e) {\n                return moment(e.dateTime).tz('UTC');\n            });\n\n            return vm.categories;\n        }\n\n        function getSplineData() {\n            vm.splineData = _.map(vm.data, function (e) {\n                return e.energy;\n            });\n\n            return vm.splineData;\n        }\n\n        function getXAxis() {\n            var output;\n\n            if (_.get(vm.dateChange, ['dateRange', 'name']) === 'daily') {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 2,\n                    labels: {\n                        format: '{value:%H:%M}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().hour() + moment().minute() / 60, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().hour() + moment().minute() / 60,\n                        to: 24\n                    }]\n                }\n            } else {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 20,\n                    labels: {\n                        format: '{value:%b:%e}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24,\n                        to: 1000 // imaginary highest value to end plotband\n                    }]\n                }\n            }\n\n            return output;\n        }\n\n        function getChartConfig() {\n            return {\n                title: {\n                    text: 'Solar Consumption',\n                    align: 'left'\n                },\n                chart: {\n                    type: 'column',\n                    backgroundColor: '#eff2f9'\n                },\n                exporting: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [{\n                    yAxis: 0,\n                    stacking: 'normal',\n                    name: 'Solar Delivered',\n                    color: '#7ED41C',\n                    data: getSplineData()\n                }, {\n                    yAxis: 0,\n                    type: 'spline',\n                    name: 'Usage Point',\n                    color: '#F6A921',\n                    data: getSplineData()\n                }],\n                xAxis: getXAxis(),\n                yAxis: [{\n                    tickInterval: 10,\n                    title: {\n                        text: 'KWh'\n                    }\n                }]\n            };\n        }\n    }\n})(angular);\n(function(angular) {\n    'use strict';\n\n    angular.module('smartEnergy.solar')\n        .component('solar', {\n            templateUrl: 'app/components/solar/solar.html',\n            controller: 'solarController',\n            controllerAs: 'vm',\n            bindings: {\n                config: '<'\n            }\n        });\n}(angular));\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.recommendation', []);\n}(angular));\n\n(function (_) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.recommendation')\n        .controller('RecommendationController', RecommendationController);\n\n    function RecommendationController($scope, $element) {\n        var vm = this;\n        var startDate = moment().add(1, 'days').startOf('days');\n        var endDate = moment().add(6, 'days').startOf('days');\n        var ticker = angular.element($element[0].querySelector('.myWrapper'));\n\n        vm.setIcon = setIcon;\n\n        $scope.$on('forecast:change', function (event, val) {\n            init(val);\n        });\n\n        $scope.$on('date:change', function (event, val) {\n            startDate = val.startDate;\n            endDate = val.endDate;\n            init(val);\n        });\n\n        ticker.easyTicker({\n            direction: 'up',\n            interval: 2000\n        });\n\n        function setIcon() {\n            return _.sample([\n                '../../../_assets/images/weather/cloudy.svg',\n                '../../../_assets/images/weather/drizzle.svg',\n                '../../../_assets/images/weather/flurries.svg',\n                '../../../_assets/images/weather/rain.svg',\n                '../../../_assets/images/weather/thunderstorms.svg',\n                '../../../_assets/images/weather/windy.svg']);\n        }\n\n        function init(val) {\n            var solarDataArray24 = [];\n            var size = 24;\n\n            vm.suggestions = [];\n\n            var solarDataArray120 = _(val.solarData)\n                .filter(function (date) {\n                    return moment(date.dateTime).valueOf() > startDate\n                        && moment(date.dateTime).valueOf() < endDate;\n                })\n                .value();\n\n            while (solarDataArray120.length > 0)\n                solarDataArray24.push(solarDataArray120.splice(0, size));\n\n\n            _.forEach(solarDataArray24, function (data) {\n                _.forEach(data, function (d, i) {\n                    if (i > 8 && i < 17 && d.energy < 16) {\n                        vm.suggestions.push({\n                            value: d,\n                            icon: setIcon()\n                        });\n                    }\n                })\n            });\n        }\n    }\n}(_));\n\n(function () {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.recommendation')\n        .component('recommendation', {\n            bindings: {\n            },\n            templateUrl: 'app/components/recommendations/recommendation.html',\n            controller: 'RecommendationController',\n            controllerAs: 'vm'\n        });\n}());\n\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.energyDataService', []);\n}(angular));\n\n(function (angular, _) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.energyDataService')\n        .service('energyDataService', energyDataService);\n\n    function energyDataService($http, $q) {\n        var vm = this;\n        var baseUrl = '';\n\n        vm.getData = getData;\n\n        function getData() {\n            return $q.resolve({});\n        }\n    }\n}(angular, _));\n\n(function (angular) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.app.energyForecast', []);\n}(angular));\n\n(function (_, moment) {\n  'use strict';\n\n  angular\n    .module('smartEnergy.app.energyForecast')\n    .controller('EnergyForecastCtrl', EnergyForecastCtrl);\n\n  function EnergyForecastCtrl($scope) {\n    var vm = this;\n    var startDate = moment().add(1, 'days').startOf('day');\n    var endDate = moment().add(6, 'days').startOf('day');\n    var DATE_FORMAT = 'ddd MM/DD';\n    var PRICE_KWH = 0.13;\n\n    vm.forecastData = {};\n    for(var i = 0; i < 5; i++) {\n      _.set(vm.forecastData, moment().add(i + 1, 'days').startOf('day').format(DATE_FORMAT), {});\n    }\n\n    $scope.$on('forecast:change', function (event, val) {\n      vm.solarData = _.filter(val.solarData, function (data) {\n        return moment(data.dateTime).valueOf() > startDate\n            && moment(data.dateTime).valueOf() < endDate;\n      });\n\n      vm.consumptionData = _.filter(val.consumptionData, function (data) {\n        return moment(data.dateTime).valueOf() > startDate\n            && moment(data.dateTime).valueOf() < endDate;\n      });\n      init();\n    });\n\n    function init() {\n      for(var i = 0; i < 5; i++) {\n        _.set(vm.forecastData, moment().add(i + 1, 'days').startOf('day').format(DATE_FORMAT), {});\n      }\n      _.filter(vm.solarData, function (data) {\n        var date = moment(data.dateTime).startOf('day').format(DATE_FORMAT);\n        var value = parseFloat(_.get(vm.forecastData, [date, 'solarEnergy'], 0)) + parseFloat(data.energy);\n        var costSaved = (value * PRICE_KWH).toFixed(2);\n\n        _.set(vm.forecastData, [date, 'solarEnergy'], value);\n        _.set(vm.forecastData, [date, 'costSaved'], costSaved);\n      });\n\n      _.filter(vm.consumptionData, function (data) {\n        var date = moment(data.dateTime).startOf('day').format(DATE_FORMAT);\n        var value = parseFloat(_.get(vm.forecastData, [date, 'energyConsumption'], 0));\n\n        _.set(vm.forecastData, [date, 'energyConsumption'], value + parseFloat(data.reading));\n      });\n      \n      _.forEach(vm.forecastData, function (data, key) {\n        var solar = _.get(vm.forecastData, [key, 'solarEnergy'], 0);\n        var consumption = _.get(vm.forecastData, [key, 'energyConsumption'], 0);\n\n        _.set(vm.forecastData, [key, 'renewable'], (solar * 100/consumption).toFixed(2) + '%');\n        _.set(vm.forecastData, [key, 'grid'], ((consumption - solar) * 100/consumption).toFixed(2) + ' %');\n        _.set(vm.forecastData, [key, 'gridUsage'], (consumption - solar).toFixed(2));\n      });\n\n      vm.width = {\n        width: '15%'\n      };\n    }\n  }\n}(_, moment));\n\n(function () {\n  'use strict';\n\n  angular\n    .module('smartEnergy.app.energyForecast')\n    .component('energyForecast', {\n      bindings: {\n        config: '<'\n      },\n      templateUrl: 'app/components/energy-forecast/energy-forecast.html',\n      controller: 'EnergyForecastCtrl',\n      controllerAs: 'vm'\n    });\n}());\n\n// var energyUsage = [46523, 38220, 25721, 28484, 36863, 42085, 46669, 39965, 30508, 27986, 32415, 37850];\n//\n// var elecCostpKWh = 0.13;\n// var solarEnPercent = 0.22;\n// var gridEnPercent = 0.78;\n//\n// var weekdaysRatio = 0.8;\n// var weekendsRatio = 0.2;\n//\n// var earlyMornsRatio = 0.05;\n// var dayTimeRatio = 0.80;\n// var lateNightRatio = 0.15;\n//\n// function randomEneGenPM(energyUsage) {\n//   var res = [];\n//   var d = new Date();\n//   d.setMonth(d.getMonth() + 1);\n//   d.setDate(1);\n//   d.setHours(0);\n//   d.setMinutes(0);\n//   d.setSeconds(-1);\n//   for (var i = 0; i < 12; i++) {\n//     var endTime = new Date(d);\n//     if (i > 0) {\n//       d.setMonth(d.getMonth() - 1);\n//       endTime = new Date(d);\n//       endTime.setMonth(endTime.getMonth() + 1);\n//       endTime.setDate(1);\n//       endTime.setHours(0);\n//       endTime.setMinutes(0);\n//       endTime.setSeconds(-1);\n//     }\n//     var dateTime = new Date(d);\n//     dateTime.setDate(1);\n//     dateTime.setHours(0);\n//     dateTime.setMinutes(0);\n//     dateTime.setSeconds(0);\n//     var rec = {\n//       dateTime: dateTime.toISOString(),\n//       endTime: endTime.toISOString(),\n//       reading: energyUsage[i],\n//       solarEnergy: (energyUsage[i] * solarEnPercent).toFixed(2),\n//       gridEnergy: (energyUsage[i] * gridEnPercent).toFixed(2),\n//       costSaving: '$' + ((energyUsage[i] * solarEnPercent * elecCostpKWh)).toFixed(2),\n//       unit: 'kWh'\n//     };\n//     res.push(rec);\n//   }\n//   return res;\n// }\n//\n// function randomEneGenPD(energyPM) {\n//   var res = [];\n//   var d = new Date(energyPM.endTime);\n//   var daysInMnth = d.getDate();\n//   var avgWeekDayRead = energyPM.reading * weekdaysRatio / getWeekDays(d);\n//   var avgWeekEndRead = energyPM.reading * weekendsRatio / (daysInMnth - getWeekDays(d));\n//   var sumWeekDay = 0;\n//   var sumWeekEnd = 0;\n//   var weekDayCnt = 0;\n//   var weekEndCnt = 0;\n//   for (var i = 0; i < daysInMnth; i++) {\n//     var endTime = new Date(d);\n//     if (i > 0) {\n//       d.setDate(d.getDate() - 1);\n//       endTime = new Date(d);\n//       endTime.setDate(endTime.getDate() + 1);\n//       endTime.setHours(0);\n//       endTime.setMinutes(0);\n//       endTime.setSeconds(-1);\n//     }\n//     var dateTime = new Date(d);\n//     dateTime.setHours(0);\n//     dateTime.setMinutes(0);\n//     dateTime.setSeconds(0);\n//     var rec = {\n//       dateTime: dateTime.toISOString(),\n//       endTime: endTime.toISOString(),\n//       unit: energyPM.unit\n//     };\n//     var tmp = 0;\n//     var reading = 0;\n//     if (d.getDay() > 0 && d.getDay() < 6) {\n//       weekDayCnt++;\n//       tmp = avgWeekDayRead * (Math.random() * 0.2 + 0.1);\n//       if (tmp > avgWeekDayRead) {\n//         tmp = tmp - (avgWeekDayRead * (tmp % avgWeekDayRead));\n//       }\n//       sumWeekDay += avgWeekDayRead;\n//       if (sumWeekDay > (avgWeekDayRead * weekDayCnt)) {\n//         sumWeekDay -= tmp;\n//         reading = avgWeekDayRead - tmp;\n//       } else {\n//         sumWeekDay += tmp;\n//         reading = avgWeekDayRead + tmp;\n//       }\n//       rec.reading = reading.toFixed(2);\n//       rec.solarEnergy = (reading * solarEnPercent).toFixed(2);\n//       rec.gridEnergy = (reading * gridEnPercent).toFixed(2);\n//       rec.costSaving = '$' + ((reading * solarEnPercent) * elecCostpKWh).toFixed(2);\n//     } else {\n//       weekEndCnt++;\n//       tmp = avgWeekEndRead * (Math.random() * 0.2 + 0.1);\n//       if (tmp > avgWeekEndRead) {\n//         tmp = tmp - (avgWeekEndRead * (tmp % avgWeekEndRead));\n//       }\n//       sumWeekEnd += avgWeekEndRead;\n//       if (sumWeekEnd > (avgWeekEndRead * weekEndCnt)) {\n//         sumWeekEnd -= tmp;\n//         reading = avgWeekEndRead - tmp;\n//       } else {\n//         sumWeekEnd += tmp;\n//         reading = avgWeekEndRead + tmp;\n//       }\n//       rec.reading = reading.toFixed(2);\n//       rec.solarEnergy = (reading * solarEnPercent).toFixed(2);\n//       rec.gridEnergy = (reading * gridEnPercent).toFixed(2);\n//       rec.costSaving = '$' + ((reading * solarEnPercent) * elecCostpKWh).toFixed(2);\n//     }\n//     res.push(rec);\n//   }\n//   return res;\n// }\n//\n// function randomEneGenPH(energyPD) {\n//   var res = [];\n//   var d = new Date(energyPD.endTime);\n//   d.setSeconds(-1);\n//   var avgEH1 = energyPD.reading * earlyMornsRatio / 9;\n//   var avgEH = energyPD.reading * dayTimeRatio / 8;\n//   var avgEH2 = energyPD.reading * lateNightRatio / 7;\n//   var sumEH = 0;\n//   var sumEH1 = 0;\n//   var sumEH2 = 0;\n//   var cntEH = 0;\n//   var cntEH1 = 0;\n//   var cntEH2 = 0;\n//   var tmp = 0;\n//   var reading = 0;\n//   var totalHrs = d.getHours();\n//   for (var i = 0; i <= totalHrs; i++) {\n//     var endTime = new Date(d);\n//     if (i > 0) {\n//       endTime.setMinutes(0);\n//       endTime.setSeconds(-1);\n//       d.setHours(d.getHours() - 1);\n//     }\n//     var dateTime = new Date(d);\n//     dateTime.setMinutes(0);\n//     dateTime.setSeconds(0);\n//     var rec = {\n//       dateTime: dateTime.toISOString(),\n//       endTime: endTime.toISOString(),\n//       unit: energyPD.unit\n//     };\n//     if (d.getHours() >= 0 && d.getHours() < 9) {\n//       cntEH1++;\n//       sumEH1 += avgEH1;\n//       tmp = avgEH1 * (Math.random() * 0.2 + 0.1);\n//       if (tmp > avgEH1) {\n//         tmp = tmp - (avgEH1 * (tmp % avgEH1));\n//       }\n//       if (sumEH1 > (avgEH1 * cntEH1)) {\n//         sumEH1 -= tmp;\n//         reading = avgEH1 - tmp;\n//       } else {\n//         sumEH1 += tmp;\n//         reading = avgEH1 + tmp;\n//       }\n//       rec.reading = reading.toFixed(2);\n//       rec.solarEnergy = (reading * solarEnPercent).toFixed(2);\n//       rec.gridEnergy = (reading * gridEnPercent).toFixed(2);\n//       rec.costSaving = '$' + ((reading * solarEnPercent) * elecCostpKWh).toFixed(2);\n//     } else if (d.getHours() >= 9 && d.getHours() <= 17) {\n//       cntEH++;\n//       sumEH += avgEH;\n//       tmp = avgEH * (Math.random() * 0.2 + 0.1);\n//       if (tmp > avgEH) {\n//         tmp = tmp - (avgEH * (tmp % avgEH));\n//       }\n//       if (sumEH > (avgEH * cntEH)) {\n//         sumEH -= tmp;\n//         reading = avgEH - tmp;\n//       } else {\n//         sumEH += tmp;\n//         reading = avgEH + tmp;\n//       }\n//       rec.reading = reading.toFixed(2);\n//       rec.solarEnergy = (reading * solarEnPercent).toFixed(2);\n//       rec.gridEnergy = (reading * gridEnPercent).toFixed(2);\n//       rec.costSaving = '$' + ((reading * solarEnPercent) * elecCostpKWh).toFixed(2);\n//     } else {\n//       cntEH2++;\n//       sumEH2 += avgEH2;\n//       tmp = avgEH2 * (Math.random() * 0.2 + 0.1);\n//       if (tmp > avgEH2) {\n//         tmp = tmp - (avgEH2 * (tmp % avgEH2));\n//       }\n//       if (sumEH2 > (avgEH2 * cntEH2)) {\n//         sumEH2 -= tmp;\n//         reading = avgEH2 - tmp;\n//       } else {\n//         sumEH2 += tmp;\n//         reading = avgEH2 + tmp;\n//       }\n//       rec.reading = reading.toFixed(2);\n//       rec.solarEnergy = (reading * solarEnPercent).toFixed(2);\n//       rec.gridEnergy = (reading * gridEnPercent).toFixed(2);\n//       rec.costSaving = '$' + ((reading * solarEnPercent) * elecCostpKWh).toFixed(2);\n//     }\n//     res.push(rec);\n//   }\n//   return res;\n// }\n//\n// function getWeekDays(dt) {\n//   var res = 0;\n//   if (dt.getDay() > 0 && dt.getDay() < 6) {\n//     res++;\n//   }\n//   return res;\n// }\n//\n// var monthlyEne = randomEneGenPM(energyUsage);\n// var dailyEne = randomEneGenPD(monthlyEne[0]);\n//\n// function getNdaysPH(n, dailyEn) {\n//   var res = [];\n//   for (var i = 0; i < n; i++) {\n//     res.push(randomEneGenPH(dailyEn[i]));\n//   }\n//   res = _.flattenDeep(res);\n//   return res;\n// }\n//\n// console.log('monthly energy usage: ', monthlyEne);\n// console.log('daily energy usage: ', dailyEne);\n// console.log('hourly energy usage: ', getNdaysPH(30, dailyEne));\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.dateRangeSelector', []);\n}(angular));\n\n(function (angular, moment) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.dateRangeSelector')\n        .controller('DateRangeSelectorController', DateRangeSelectorController);\n\n    function DateRangeSelectorController($rootScope) {\n        var vm = this;\n\n        vm.$onInit = onInit;\n        vm.checkDates = checkDates;\n        vm.applyDatesThroughButtonGroup = applyDatesThroughButtonGroup;\n        vm.applyDatesThroughClick = applyDatesThroughClick;\n        vm.openStartDatePicker = openStartDatePicker;\n        vm.openEndDatePicker = openEndDatePicker;\n\n        function onInit() {\n            vm.dates = {\n                startDate: new Date(moment().subtract(1, 'days').format('LLLL')),\n                endDate: new Date(moment().format('LLLL'))\n            };\n            vm.buttonGroup = [\n                { name: 'daily', date: 1 },\n                { name: '5 days', date: 2.5 },\n                { name: '10 days', date: 5 }\n            ];\n            vm.selectedRange = vm.buttonGroup[0];\n            vm.isEndDatePickerOpen = false;\n            vm.isStartDatePickerOpen = false;\n            vm.datePickerOptions = {\n                showWeeks: false,\n                maxMode: 'day',\n                startingDay: 1\n            };\n            vm.dateModelOptions = {\n                timezone: moment.tz.guess()\n            };\n        }\n\n        function applyDatesThroughButtonGroup(obj) {\n            vm.selectedRange = obj;\n            vm.errMessage = '';\n            vm.dates = {\n                startDate: new Date(moment().subtract(obj.date, 'days').format('LLLL')),\n                endDate: obj.date === 1 ? new Date(moment().format('LLLL')): new Date(moment().add(obj.date, 'days').format('LLLL'))\n            };\n\n            applyDates();\n        }\n\n        function applyDatesThroughClick() {\n            vm.selectedRange = [];\n            applyDates();\n        }\n\n        function applyDates() {\n            // convert date to milliseconds at midnight\n            $rootScope.$broadcast('date:change', {\n                startDate: moment(vm.dates.startDate).valueOf() - (new Date()-new Date().setHours(0,0,0,0)),\n                endDate: moment(vm.dates.endDate).valueOf() - (new Date()-new Date().setHours(0,0,0,0)),\n                dateRange: vm.selectedRange\n            });\n        }\n\n        function checkDates() {\n            vm.errMessage = '';\n            vm.invalidDate = false;\n\n            if (moment(vm.dates.startDate).valueOf() >= moment(vm.dates.endDate).valueOf()) {\n                vm.errMessage = '* End Date should be greater than start date';\n                vm.invalidDate = true;\n            }\n        }\n\n        function openEndDatePicker(event) {\n            vm.isEndDatePickerOpen = !vm.isEndDatePickerOpen;\n            event.stopPropagation();\n        }\n\n        function openStartDatePicker(event) {\n            vm.isStartDatePickerOpen = !vm.isStartDatePickerOpen;\n            event.stopPropagation();\n        }\n    }\n}(angular, moment));\n\n(function () {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app.dateRangeSelector')\n        .component('dateRangeSelector', {\n            bindings: {\n                onDateChange: '&'\n            },\n            templateUrl: 'app/components/date-range-selector/date-range-selector.html',\n            controller: 'DateRangeSelectorController',\n            controllerAs: 'vm'\n        });\n}());\n\n(function (angular) {\n    'use strict';\n\n    angular.module('smartEnergy.battery', []);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.battery')\n        .controller('batteryController', batteryController);\n\n    function batteryController($http, $rootScope, $scope) {\n        var vm = this;\n        vm.categories = [];\n        vm.dateChange = {\n            startDate: moment(new Date(moment().subtract(1, 'days').format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            endDate: moment(new Date(moment().format('LLLL'))).valueOf() - (new Date() - new Date().setHours(0, 0, 0, 0)),\n            dateRange: {\n                name: \"daily\",\n                date: 1\n            }\n        };\n        var EMERGENCY_STORAGE = 50;\n        var MAX_STORAGE = 250;\n        var usedBatteryData = [];\n        var storedBatteryData = [];\n        var solarData;\n\n        vm.$onInit = init;\n\n        $scope.$on('data:change', function (event, val) {\n            solarData = val.data;\n            vm.dateChange = val.dateChange\n            init();\n        });\n\n        function init() {\n            generateBatteryUsage();\n            plotChart();\n        }\n\n        function generateBatteryUsage() {\n            var initialValue = 50 + Math.random() * 10;\n            usedBatteryData = [];\n            storedBatteryData = [];\n\n            _.forEach(solarData, function(data) {\n                var energy = parseFloat(data.energy);\n                var storedEnergy;\n                var usedEnergy;\n\n                if (energy > 10) {\n                    if (initialValue > 150) {\n                        storedEnergy = initialValue + energy * 0.01 * 0.8;\n                        usedEnergy = energy * 0.99 * 0.9;\n                    } else if (initialValue < 150) {\n                        storedEnergy = initialValue + energy * 0.1 * 0.8;\n                        usedEnergy = energy * 0.9 * 0.9;\n                    }\n                } else {\n                    usedEnergy = initialValue * 0.75;\n                    storedEnergy = initialValue * 0.25 + energy * 0.8;\n                }\n\n\n                if (storedEnergy > MAX_STORAGE) {\n                    usedEnergy += (storedEnergy - MAX_STORAGE);\n                    storedEnergy = MAX_STORAGE;\n                } else if (storedEnergy < EMERGENCY_STORAGE) {\n                    usedEnergy -= (EMERGENCY_STORAGE - storedEnergy);\n                    storedEnergy = EMERGENCY_STORAGE;\n                }\n\n                initialValue = storedEnergy;\n\n                usedBatteryData.push(parseFloat((usedEnergy).toFixed(2)));\n                storedBatteryData.push(parseFloat((storedEnergy).toFixed(2)));\n            });\n        }\n\n        function plotChart() {\n            Highcharts.chart('battery', getChartConfig());\n        }\n\n        function getCategories() {\n            vm.categories = _.map(solarData, function (e) {\n                return moment(e.dateTime).tz('UTC');\n            });\n            return vm.categories;\n        }\n\n        function getSplineData() {\n            vm.splineData = _.map(solarData, function (e) {\n                return e.energy;\n            });\n\n            return vm.splineData;\n        }\n\n        function getXAxis() {\n            var output;\n\n            if (_.get(vm.dateChange, ['dateRange', 'name']) === 'daily') {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 2,\n                    labels: {\n                        format: '{value:%H:%M}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().hour() + moment().minute() / 60, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().hour() + moment().minute() / 60,\n                        to: 24\n                    }]\n                }\n            } else {\n                output = {\n                    title: {\n                        text: 'Time'\n                    },\n                    categories: getCategories(),\n                    type: 'datetime',\n                    tickInterval: 20,\n                    labels: {\n                        format: '{value:%b:%e}'\n                    },\n                    plotLines: [{\n                        color: '#696969', // Color value\n                        dashStyle: 'longdashdot', // Style of the plot line. Default to solid\n                        value: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24, // Value of where the line will appear\n                        width: 2, // Width of the line\n                        zIndex: 4\n                    }],\n                    plotBands: [{ // mark the weekend\n                        color: '#DCDCDC',\n                        label: {\n                            text: 'Prediction range',\n                            align: 'center'\n                        },\n                        from: moment().diff(moment(_.get(vm.dateChange, 'startDate')), 'days') * 24,\n                        to: 1000 // imaginary highest value to end plotband\n                    }]\n                }\n            }\n\n            return output;\n        }\n\n        function getChartConfig() {\n            return {\n                title: {\n                    text: 'Battery Level',\n                    align: 'left'\n                },\n                chart: {\n                    type: 'column',\n                    backgroundColor: '#eff2f9'\n                },\n                exporting: {\n                    enabled: false\n                },\n                credits: {\n                    enabled: false\n                },\n                series: [\n                {\n                    yAxis: 0,\n                    color: '#297DDC',\n                    name: 'Battery Available',\n                    data: storedBatteryData\n                },{\n                    yAxis: 0,\n                    color: '#2AC7DC',\n                    name: 'Battery Used',\n                    data: usedBatteryData\n                }],\n                xAxis: getXAxis(),\n                yAxis: [{\n                    tickInterval: 10,\n                    title: {\n                        text: 'KWh'\n                    }\n                }]\n            };\n        }\n    }\n})(angular);\n(function(angular) {\n    'use strict';\n\n    angular.module('smartEnergy.battery')\n        .component('battery', {\n            templateUrl: 'app/components/battery/battery.html',\n            controller: 'batteryController',\n            controllerAs: 'vm',\n            bindings: {\n                config: '<'\n            }\n        });\n}(angular));\n(function (angular) {\n    'use strict';\n\n    angular\n        .module('smartEnergy.app', [\n            'smartEnergy.header',\n            'smartEnergy.footer',\n            'smartEnergy.login',\n            'smartEnergy.dashboard',\n            'smartEnergy.timeseries'\n        ])\n        .config(moduleConfig)\n        .run(moduleRun);\n\n    function moduleConfig($urlRouterProvider, $stateProvider) {\n\n        $urlRouterProvider.when('/', '/login');\n\n        $urlRouterProvider.otherwise(function ($injector) {\n            $injector.get('$state').go(\"login\");\n        });\n\n        $stateProvider\n            .state('smartEnergy', {\n                url: '/app',\n                views: {\n                    '@': {\n                        templateUrl: 'app/smartEnergy.app.tmpl.html'\n                    },\n                    'header@smartEnergy': {\n                        templateUrl: 'app/features/header/header.tmpl.html',\n                        controller: 'HeaderController',\n                        controllerAs: 'headerVm'\n                    },\n                    'footer@smartEnergy': {\n                        templateUrl: 'app/features/footer/footer.tmpl.html',\n                        controller: 'FooterController',\n                        controllerAs: 'footerVm'\n                    }\n                }\n            })\n            .state('smartEnergy.dashboard', {\n                url: \"/dashboard\",\n                templateUrl: 'app/features/dashboard-view/dashboard.tmpl.html',\n                controller: 'DashboardController',\n                controllerAs: 'vm',\n                resolve: {\n                }\n            })\n            .state('login', {\n                url: \"/login\",\n                templateUrl: 'app/features/login/login.html',\n                controller: 'LoginController',\n                controllerAs: 'vm',\n                resolve: {\n                }\n            })\n            .state('smartEnergy.404', {\n                templateUrl: 'app/smartEnergy.404.tmpl.html'\n            });\n    }\n\n    function moduleRun() {\n    }\n\n})(angular);\n\nangular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/smartEnergy.404.tmpl.html','<div class=container-fluid><div class=\"text-center error-box\"><h1>404</h1><h4>|Page Not Found|</h4></div></div>');\n$templateCache.put('app/smartEnergy.app.tmpl.html','<div class=main><header ui-view=header></header><div ui-view></div></div>');\n$templateCache.put('app/components/battery/battery.html','<div class=\"panel panel-default\"><div><div id=battery class=battery></div></div></div>');\n$templateCache.put('app/components/date-range-selector/date-range-selector.html','<div class=date-range-selector><div><div><form><div><div class=col-xs-1><label for=startDate class=control-label>Start Date</label></div><div class=col-xs-2><div class=input-group><input id=startDate type=text uib-datepicker-popup popup-placement=bottom-right popover-trigger=\"\\'outsideClick\\'\" ng-model=vm.dates.startDate ng-model-options=vm.dateModelOptions datepicker-options=vm.datePickerOptions class=form-control ng-class=\"{\\'ngInvalidDate\\': vm.invalidDate}\" is-open=vm.isStartDatePickerOpen datepicker-mode=\"\\'day\\'\" show-button-bar=false ng-change=vm.checkDates()> <span class=input-group-btn><button type=button class=\"btn btn-default\" ng-click=vm.openStartDatePicker($event)><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=col-xs-1><label for=endDate class=control-label>End Date</label></div><div class=col-xs-2><div class=input-group><input id=endDate type=text uib-datepicker-popup popup-placement=bottom-right popover-trigger=\"\\'outsideClick\\'\" ng-model=vm.dates.endDate ng-model-options=vm.dateModelOptions datepicker-options=vm.datePickerOptions class=form-control ng-class=\"{\\'ngInvalidDate\\': vm.invalidDate}\" is-open=vm.isEndDatePickerOpen datepicker-mode=\"\\'day\\'\" show-button-bar=false ng-change=vm.checkDates()> <span class=input-group-btn><button type=button class=\"btn btn-default\" ng-click=vm.openEndDatePicker($event)><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div></div><div class=col-sm-1><a type=button class=\"btn btn-default\" ng-disabled=vm.errMessage ng-click=vm.applyDatesThroughClick()>Apply</a></div><div><div class=btn-group role=group><button ng-repeat=\"btn in vm.buttonGroup\" class=\"btn btn-default\" ng-class=\"{\\'btn-selected\\': (vm.selectedRange == btn)}\" ng-click=vm.applyDatesThroughButtonGroup(btn)>{{btn.name}}</button></div></div></div><span class=color-red>{{vm.errMessage}}</span></form></div></div></div><span up-kit-spinner={{vm.loading}}></span>');\n$templateCache.put('app/components/energy-forecast/energy-forecast.html','<!-- <div class=\"forecast-data\">\\n        <div class=\"panel panel-default\">\\n            <h4 class=\"h4-class\">Energy Forecast</h4>\\n\\n            <div class=\"panel-body\">\\n                <div ng-repeat=\"(key, val) in vm.forecastData\"\\n                     class=\"\">\\n                    <span ng-style=\"vm.width\"\\n                          class=\"pull-left forecast-block\">\\n                        <div class=\"row\"><span class=\"col-xs-7 forecast-val text-green\">{{val.renewable}}</span><span class=\" forecast-unit\">renewable energy</span></div>\\n                        <div class=\"row\"><span class=\"col-xs-7 forecast-val text-red\">{{val.grid}}</span><span class=\" forecast-unit\">grid energy</span></div>\\n                        <div class=\"row\"><span class=\"col-xs-7 forecast-val\">{{val.gridUsage}}</span><span class=\" forecast-unit\">kWh Grid usage</span></div>\\n                        <div class=\"row\"><span class=\"col-xs-7 forecast-val\">$ {{val.costSaved}}</span><span class=\" forecast-unit\">projected savings</span></div>\\n                        <div class=\"row\"><span class=\"col-xs-12 forecast-day\">{{key}}</span></div>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </div> --><div class=forecast-data><div class=\"panel panel-default\"><h4 class=h4-class>Energy Forecast</h4><div class=panel-body><div ng-repeat=\"(key, val) in vm.forecastData\" style=\"width: 225px; float:left; height:165px; margin:20px\"><span ng-style=vm.width><div class=row><span class=\"col-xs-7 forecast-val text-green\">{{val.renewable}}</span> <span class=forecast-unit>renewable energy</span></div><div class=row><span class=\"col-xs-7 forecast-val text-red\">{{val.grid}}</span> <span class=forecast-unit>grid energy</span></div><div class=row><span class=\"col-xs-7 forecast-val\">{{val.gridUsage}}</span> <span class=forecast-unit>kWh Grid usage</span></div><div class=row><span class=\"col-xs-7 forecast-val\">$ {{val.costSaved}}</span> <span class=forecast-unit>projected savings</span></div><div class=row style=\"margin-right: 0px; margin-left: 0px\"><hr class=hr-style><span class=\"col-xs-12 forecast-day\">{{key}}</span></div></span></div></div></div></div>');\n$templateCache.put('app/components/recommendations/recommendation.html','<div class=recommendation><div class=heading>Recommendations</div><div class=outer><div class=myWrapper><ul><li ng-repeat=\"suggestion in vm.suggestions\" class=item-{{$index}}><img class=icon-size ng-src={{suggestion.icon}}> <span>Solar energy generation is going down on {{suggestion.value.dateTime| date:\\'MM/dd/yyyy @ h:mma\\'}}, Do any high energy task before that</span></li></ul></div></div></div>');\n$templateCache.put('app/components/solar/solar.html','<div class=\"panel panel-default\"><div><div id=solar class=solar></div></div></div>');\n$templateCache.put('app/components/timeseries/timeseries.html','<div class=\"panel panel-default\"><div><div id=container style=\"min-width: 310px; height: 400px; margin: 0 auto\"></div></div></div>');\n$templateCache.put('app/features/dashboard-view/dashboard.tmpl.html','<div class=\"dashboard container-fluid\"><div class=energy-forecast><energy-forecast></energy-forecast></div><div class=recommendation><recommendation></recommendation></div><div class=row><div class=col-xs-12><div class=time-series><time-series></time-series></div></div></div><div class=row><div class=col-xs-6><div class=solar><solar></solar></div></div><div class=col-xs-6><div class=battery><battery></battery></div></div></div><div class=total-impact><total-impact></total-impact></div></div>');\n$templateCache.put('app/components/total-impact/total-impact.html','<div class=total-impact><div class=\"panel panel-default\"><h4 class=h4-class>Total Impact</h4><div class=panel-body><div ng-repeat=\"val in vm.values\" class=text-center><div><span ng-style=vm.width class=\"pull-left card\"><img class=icon-size ng-src={{val.name}}><div class=value><h3><span ng-if=val.prefix>{{val.prefix}} </span><span>{{val.value}} </span><span ng-if=val.suffix>{{val.suffix}}</span></h3></div><div class=footer>{{val.footer}}</div></span></div></div></div></div></div>');\n$templateCache.put('app/features/footer/footer.tmpl.html','<div class=container-fluid><h3 class=text-center>...Team SmartEnergy...</h3></div>');\n$templateCache.put('app/features/header/header.tmpl.html','<div class=header-class><nav class=\"navbar navbar-fixed-top navbar-default remove-margin\"><div class=container-fluid><div class=navbar-header><span class=navbar-brand>Smart Energy Forecaster</span></div><div class=\"collapse navbar-collapse\" id=bs-example-navbar-collapse-1><ul class=\"nav navbar-nav navbar-right\"><li class=date-selector><div><date-range-selector></date-range-selector></div></li><li><span class=uptake-logo><img class=image-class src=_assets/images/uptake.png> <span>{{headerVm.user}}</span></span></li></ul></div></div></nav></div>');\n$templateCache.put('app/features/login/login.html','<div class=\"login container-fluid\"><div class=\"row login-header\"><div class=col-xs-10><h2 class=header-title>Smart Energy Forecaster</h2></div><div><span class=uptake-logo><img class=image-class src=_assets/images/uptake.png></span></div></div><div class=login-title><h2>Login</h2></div><div class=single-sign-on><div class=g-signin2 data-onsuccess=onSignIn></div></div></div><script src=\"https://apis.google.com/js/platform.js?onload=onLoadCallback\" async defer></script>');}]);"]}